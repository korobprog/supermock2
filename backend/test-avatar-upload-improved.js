const axios = require('axios');
const FormData = require('form-data');
const fs = require('fs');
const path = require('path');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_BASE_URL = 'http://localhost:3000/api/v1';
const TEST_IMAGE_PATH = path.join(__dirname, 'test-avatar.png');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
function createTestImage() {
  if (!fs.existsSync(TEST_IMAGE_PATH)) {
    console.log('üìÅ Creating test image...');
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ PNG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (1x1 –ø–∏–∫—Å–µ–ª—å)
    const pngData = Buffer.from([
      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
      0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
      0x08, 0x02, 0x00, 0x00, 0x00, 0x90, 0x77, 0x53, 0xde, 0x00, 0x00, 0x00,
      0x0c, 0x49, 0x44, 0x41, 0x54, 0x08, 0xd7, 0x63, 0xf8, 0x0f, 0x00, 0x00,
      0x01, 0x00, 0x01, 0x5c, 0xcd, 0x90, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x49,
      0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82,
    ]);
    fs.writeFileSync(TEST_IMAGE_PATH, pngData);
    console.log('‚úÖ Test image created');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏–Ω–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
async function login() {
  try {
    console.log('üîê Attempting to login...');
    const response = await axios.post(`${API_BASE_URL}/users/login`, {
      email: 'test@example.com',
      password: 'test123',
    });

    const token = response.data.data.token;
    console.log('‚úÖ Login successful, token received');
    return token;
  } catch (error) {
    console.error('‚ùå Login failed:', error.response?.data || error.message);
    throw error;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞
async function uploadAvatar(token) {
  try {
    console.log('üì§ Uploading avatar...');

    // –°–æ–∑–¥–∞–µ–º FormData
    const formData = new FormData();
    const fileStream = fs.createReadStream(TEST_IMAGE_PATH);
    formData.append('avatar', fileStream, {
      filename: 'test-avatar.png',
      contentType: 'image/png',
    });

    console.log('üîç Making upload request to:', `${API_BASE_URL}/users/avatar`);
    console.log('üîç Using token:', token ? 'Present' : 'Missing');

    const response = await axios.post(
      `${API_BASE_URL}/users/avatar`,
      formData,
      {
        headers: {
          ...formData.getHeaders(),
          Authorization: `Bearer ${token}`,
        },
        timeout: 30000, // 30 —Å–µ–∫—É–Ω–¥
      }
    );

    console.log('‚úÖ Avatar upload successful!');
    console.log('üìÑ Response:', JSON.stringify(response.data, null, 2));
    return response.data;
  } catch (error) {
    console.error('‚ùå Avatar upload failed:');
    console.error('Status:', error.response?.status);
    console.error('Status Text:', error.response?.statusText);
    console.error('Data:', error.response?.data);
    console.error('Headers:', error.response?.headers);
    throw error;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  try {
    console.log('üöÄ Starting avatar upload test...');
    console.log('üîç API Base URL:', API_BASE_URL);

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    createTestImage();

    // –õ–æ–≥–∏–Ω–∏–º—Å—è
    const token = await login();

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≤–∞—Ç–∞—Ä
    await uploadAvatar(token);

    console.log('üéâ Test completed successfully!');
  } catch (error) {
    console.error('üí• Test failed:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
main();
