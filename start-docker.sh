#!/bin/bash

# ะกะบัะธะฟั ะดะปั ะทะฐะฟััะบะฐ ะฟัะพะตะบัะฐ ะฒ Docker (ะฟัะพะดะฐะบัะฝ-ัะตะถะธะผ)
# Mock Interview Application - Docker Production Startup Script

echo "๐ณ ะะฐะฟััะบ Mock Interview App ะฒ Docker (ะฟัะพะดะฐะบัะฝ-ัะตะถะธะผ)..."

# ะัะพะฒะตัะบะฐ ะฝะฐะปะธัะธั Docker
if ! command -v docker &> /dev/null; then
    echo "โ Docker ะฝะต ัััะฐะฝะพะฒะปะตะฝ. ะะพะถะฐะปัะนััะฐ, ัััะฐะฝะพะฒะธัะต Docker."
    exit 1
fi

# ะัะพะฒะตัะบะฐ ะฝะฐะปะธัะธั Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo "โ Docker Compose ะฝะต ัััะฐะฝะพะฒะปะตะฝ. ะะพะถะฐะปัะนััะฐ, ัััะฐะฝะพะฒะธัะต Docker Compose."
    exit 1
fi

echo "โ Docker ะธ Docker Compose ัััะฐะฝะพะฒะปะตะฝั"

# ะััะฐะฝะพะฒะบะฐ ัััะตััะฒัััะธั ะบะพะฝัะตะนะฝะตัะพะฒ
echo "๐ ะััะฐะฝะพะฒะบะฐ ัััะตััะฒัััะธั ะบะพะฝัะตะนะฝะตัะพะฒ..."
docker-compose down 2>/dev/null || echo "ะะพะฝัะตะนะฝะตัั ัะถะต ะพััะฐะฝะพะฒะปะตะฝั"

# ะัะธััะบะฐ ััะฐััั ะพะฑัะฐะทะพะฒ (ะพะฟัะธะพะฝะฐะปัะฝะพ)
read -p "๐งน ะัะธััะธัั ััะฐััะต Docker ะพะฑัะฐะทั? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "๐งน ะัะธััะบะฐ ััะฐััั ะพะฑัะฐะทะพะฒ..."
    docker-compose down --rmi all --volumes --remove-orphans 2>/dev/null || echo "ะะตัะตะณะพ ะพัะธัะฐัั"
fi

# ะกะฑะพัะบะฐ ะพะฑัะฐะทะพะฒ
echo "๐จ ะกะฑะพัะบะฐ Docker ะพะฑัะฐะทะพะฒ..."
docker-compose build

# ะัะพะฒะตัะบะฐ ััะฟะตัะฝะพััะธ ัะฑะพัะบะธ
if [ $? -ne 0 ]; then
    echo "โ ะัะธะฑะบะฐ ะฟัะธ ัะฑะพัะบะต Docker ะพะฑัะฐะทะพะฒ"
    exit 1
fi

echo "โ ะะฑัะฐะทั ััะฟะตัะฝะพ ัะพะฑัะฐะฝั"

# ะะฐะฟััะบ ะบะพะฝัะตะนะฝะตัะพะฒ
echo "๐ ะะฐะฟััะบ ะบะพะฝัะตะนะฝะตัะพะฒ..."
docker-compose up -d

# ะัะพะฒะตัะบะฐ ััะฐัััะฐ ะบะพะฝัะตะนะฝะตัะพะฒ
echo "โณ ะะถะธะดะฐะฝะธะต ะทะฐะฟััะบะฐ ะฒัะตั ัะตัะฒะธัะพะฒ..."
sleep 15

# ะัะพะฒะตัะบะฐ ะทะดะพัะพะฒัั ะบะพะฝัะตะนะฝะตัะพะฒ
echo "๐ ะัะพะฒะตัะบะฐ ััะฐัััะฐ ะบะพะฝัะตะนะฝะตัะพะฒ..."
docker-compose ps

# ะัะธะผะตะฝะตะฝะธะต ะผะธะณัะฐัะธะน ะฑะฐะทั ะดะฐะฝะฝัั
echo "๐๏ธ ะัะธะผะตะฝะตะฝะธะต ะผะธะณัะฐัะธะน ะฑะฐะทั ะดะฐะฝะฝัั..."
docker-compose exec backend npx prisma migrate deploy 2>/dev/null || echo "ะะธะณัะฐัะธะธ ัะถะต ะฟัะธะผะตะฝะตะฝั"

# ะะฐะฟะพะปะฝะตะฝะธะต ะฑะฐะทั ะดะฐะฝะฝัั (ะตัะปะธ ะฝัะถะฝะพ)
echo "๐ฑ ะะฐะฟะพะปะฝะตะฝะธะต ะฑะฐะทั ะดะฐะฝะฝัั ัะตััะพะฒัะผะธ ะดะฐะฝะฝัะผะธ..."
docker-compose exec backend npx prisma db seed 2>/dev/null || echo "ะะฐะทะฐ ะดะฐะฝะฝัั ัะถะต ะทะฐะฟะพะปะฝะตะฝะฐ"

echo ""
echo "๐ ะัะธะปะพะถะตะฝะธะต ััะฟะตัะฝะพ ะทะฐะฟััะตะฝะพ ะฒ Docker!"
echo "๐ฑ ะคัะพะฝัะตะฝะด: http://localhost:5174"
echo "๐ง ะัะบะตะฝะด API: http://localhost:3000"
echo "๐๏ธ ะะฐะทะฐ ะดะฐะฝะฝัั: localhost:5432"
echo "๐ด Redis: localhost:6379"
echo ""
echo "๐ ะะปั ะฟัะพัะผะพััะฐ ะปะพะณะพะฒ: docker-compose logs -f"
echo "๐ ะะปั ะพััะฐะฝะพะฒะบะธ: docker-compose down"
echo "๐ ะะปั ะฟะตัะตะทะฐะฟััะบะฐ: docker-compose restart"
echo ""
echo "๐ ะะพะปะตะทะฝัะต ะบะพะผะฐะฝะดั:"
echo "  docker-compose ps                    # ะกัะฐััั ะบะพะฝัะตะนะฝะตัะพะฒ"
echo "  docker-compose logs -f [service]     # ะะพะณะธ ัะตัะฒะธัะฐ"
echo "  docker-compose exec backend bash     # ะะพะดะบะปััะตะฝะธะต ะบ ะฑัะบะตะฝะดั"
echo "  docker-compose exec frontend sh      # ะะพะดะบะปััะตะฝะธะต ะบ ััะพะฝัะตะฝะดั"