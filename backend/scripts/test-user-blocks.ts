import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function testUserBlocks() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');

    // –ù–∞–π–¥–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const testUser = await prisma.user.findFirst({
      where: {
        role: 'USER',
      },
    });

    if (!testUser) {
      console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${testUser.email}`);

    // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    const activeBlocks = await prisma.userBlock.findMany({
      where: {
        userId: testUser.id,
        isActive: true,
      },
    });

    console.log(
      `üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${activeBlocks.length}`
    );

    // –ü—Ä–æ–≤–µ—Ä–∏–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ
    const totalBlocks = await prisma.userBlock.count();
    console.log(`üìä –í—Å–µ–≥–æ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ: ${totalBlocks}`);

    // –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ
    const totalActiveBlocks = await prisma.userBlock.count({
      where: {
        isActive: true,
        OR: [
          { isPermanent: true },
          {
            isPermanent: false,
            endDate: {
              gt: new Date(),
            },
          },
        ],
      },
    });

    console.log(`üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ: ${totalActiveBlocks}`);

    console.log('‚úÖ API –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
    console.log('\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:');
    console.log('  POST /api/user-blocks - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('  DELETE /api/user-blocks/:id - –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log(
      '  GET /api/user-blocks/user/:userId - –ò—Å—Ç–æ—Ä–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
    );
    console.log('  GET /api/user-blocks/active - –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testUserBlocks();
