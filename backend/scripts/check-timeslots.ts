import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function checkTimeSlots() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');

    // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤
    const totalCount = await prisma.timeSlot.count();
    console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤: ${totalCount}`);

    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
    const availableCount = await prisma.timeSlot.count({
      where: { status: 'AVAILABLE' },
    });
    const bookedCount = await prisma.timeSlot.count({
      where: { status: 'BOOKED' },
    });
    const cancelledCount = await prisma.timeSlot.count({
      where: { status: 'CANCELLED' },
    });

    console.log(`üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã: ${availableCount}`);
    console.log(`üìä –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã: ${bookedCount}`);
    console.log(`üìä –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã: ${cancelledCount}`);

    // –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ —Å–ª–æ—Ç–æ–≤
    const sampleSlots = await prisma.timeSlot.findMany({
      take: 5,
      include: {
        interviewer: {
          include: {
            profile: true,
          },
        },
        booking: {
          include: {
            candidate: {
              include: {
                profile: true,
              },
            },
            interview: true,
          },
        },
      },
    });

    console.log('üìã –ü—Ä–∏–º–µ—Ä—ã —Å–ª–æ—Ç–æ–≤:');
    sampleSlots.forEach((slot, index) => {
      console.log(`${index + 1}. ID: ${slot.id}`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${slot.status}`);
      console.log(`   –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: ${slot.specialization}`);
      console.log(`   –í—Ä–µ–º—è: ${slot.startTime} - ${slot.endTime}`);
      console.log(
        `   –ò–Ω—Ç–µ—Ä–≤—å—é–µ—Ä: ${slot.interviewer.profile?.firstName} ${slot.interviewer.profile?.lastName}`
      );
      if (slot.booking) {
        console.log(`   –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: ${slot.booking.status}`);
        console.log(
          `   –ö–∞–Ω–¥–∏–¥–∞—Ç: ${slot.booking.candidate.profile?.firstName} ${slot.booking.candidate.profile?.lastName}`
        );
      }
      console.log('---');
    });

    // –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const usersCount = await prisma.user.count();
    const interviewersCount = await prisma.user.count({
      where: { role: 'INTERVIEWER' },
    });
    const candidatesCount = await prisma.user.count({
      where: { role: 'USER' },
    });

    console.log(`üë• –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersCount}`);
    console.log(`üë®‚Äçüíº –ò–Ω—Ç–µ—Ä–≤—å—é–µ—Ä—ã: ${interviewersCount}`);
    console.log(`üë®‚Äçüíª –ö–∞–Ω–¥–∏–¥–∞—Ç—ã: ${candidatesCount}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkTimeSlots();
